tp = 0; tn = 0; fp = 0; fn = 0;

# statlog - bayes
#matrix = [[35,      14,      22,      11],
#          [2,       19,      2,       17],
#          [2,       1,       9,       0],
#          [1,       9,       11,      14]]
#          
#_p = [42.68,47.5,75.0,40.0]
#_r = [87.5,44.19,20.45,33.33]
#
# statlog - logreg
#matrix=[[39,      2,       0,       0],
#        [0,       27,      0,       16],
#        [1,       5,       44,      2],
#        [0,       9,       0,       24]]
#_p = [95.12,62.79,84.62,72.73]
#_r = [97.5,62.8,100.0,57.14]
#
# statlog - svm
#matrix = [[28,      1,       4,       2],
#          [5,       23,      1,       5],
#          [2,       4,       39,      1],
#          [5,       15,      0,       34]]
#_p = [80.0,67.65,84.8,62.96]
#_r = [70,53.5,88.6,80.95]
#
# statlog - knn
#matrix = [[30,      2,       1,       0],
#          [3,       22,      0,       21],
#          [3,       2,       42,      0],
#          [4,       17,      1,       21]]
#_p = [90.91,47.83,89.36,48.84]
#_r = [75.0,51.16,95.5,50.0]
#
# statlog - tree
#matrix = [[28,      4,       1,       5],
#          [3,       26,      0,       27],
#          [6,       2,       43,      0],
#          [3,       11,      0,       10]]
#_p = [73.7,46.4,84.3,41.6]
#_r = [70.0,60.5,97.7,23.8]
#
# splice - knn
#
#matrix = [[74,	1,	9],
#          [2,	74,	15],
#          [0,	2,	115]]
#_p = [ 88.1,81.3,98.3 ]
#_r = [ 98.4, 96.1, 82.7 ]
#
# splice - tree
#
#matrix = [[64,	3,	6],
#          [5,	69,	5],
#          [7,	5,	128]]
#_p = [ 87.67,87.34,91.43 ]
#_r = [ 84.21, 89.61, 92.09 ] 
#
# splice - bayes
#matrix = [[64,	3,	6],
#          [5,	69,	5],
#          [7,	5,	128]]
#_p = [87.67,87.34,91.43]
#_r = [84.21,89.61,92.09]
#
# splice - svm
#
matrix = [[64,	3,	6],
          [5,	69,	5],
          [7,	5,	128]]
_p = [ 71.74, 78.75, 91.67 ]
_r = [ 86.84, 81.82, 79.14 ]

f_makro = 0.0

r = [i / 100.0 for i in _r]
p = [i / 100.0 for i in _p]
print r
       
       
for i in range(0,len(matrix[0])):
	tp += matrix[i][i]
	fp += sum(matrix[i]) - matrix[i][i]
	for j in range(0,len(matrix[0])):
		fn += matrix[j][i]
	fn -= matrix[i][i]
	f_makro += (2.0 * p[i] * r[i]) / (p[i] + r[i])
f_makro /= len(matrix[0])	
#print tp, fp, fn

print "f1_micro: %.2f" % (2*tp / float(2*tp + fp + fn),)
print "f1_macro: %.2f" % (f_makro,)
print "macro-p: %.2f" % (sum(p)/len(p),)
print "macro-r: %.2f" % (sum(r)/len(r),)